{"version":3,"file":"extension.js","mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,S,GCCrBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,CAAC,GAOX,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,OACf,C,uGCtBA,eAEA,IAAIQ,GAAY,EAEhB,oBAAyBC,GACvB,IAAIC,EAAeC,EAAOC,OAAOC,iBAE7BC,EAASH,EAAOI,UAAUC,iBAAiB,2BAC3CC,EAAkBH,EAAOI,IAC3B,kBACA,2BAGEC,EAAoBR,EAAOC,OAAOQ,+BAA+B,CACnEH,gBAAiBA,IAInB,MAAMI,EAAsBV,EAAOC,OAAOU,oBACxCX,EAAOY,mBAAmBC,MAC1B,KAQF,SAASC,EAAoBC,GACvBlB,GACFkB,EAAKC,KAAO,OACZD,EAAKE,WAAQtB,IAEboB,EAAKC,KAAO,QACZD,EAAKE,MAAQ,4BAEfF,EAAKG,QAAU,8BACfH,EAAKI,MACP,CAhBAT,EAAoBU,QAAU,sBAC9BN,EAAoBJ,GAGpBZ,EAAQuB,cAAcC,KAAKZ,GAe3B,MAAMa,EAAgBvB,EAAOwB,SAASC,gBACpC,uBACA,KACE5B,GAAaA,EACbiB,EAAoBJ,GACpBgB,GAAmB,IAOvB,SAASA,IACP,IAAK3B,EACH,OAGF,MAAM4B,EAAQ,cACRX,EAAOjB,EAAa6B,SAASC,UAC7BC,EAA6C,GACnD,IAAIC,EACAC,EAA0C,KAE9C,KAAQD,EAAQJ,EAAMM,KAAKjB,IAAQ,CACjC,MAAMkB,EAAWnC,EAAa6B,SAASO,WAAWJ,EAAMK,OAClDC,EAAStC,EAAa6B,SAASO,WACnCJ,EAAMK,MAAQL,EAAM,GAAGO,QAGzB,GAAiB,UAAbP,EAAM,GACRC,EAAkBE,OACb,GAAiB,OAAbH,EAAM,IAAeC,EAAiB,CAC/C,MAAMO,EAAa,CACjBC,MAAO,IAAIxC,EAAOyC,MAAMT,EAAiBK,GACzCK,aAAc,aAEhBZ,EAAeR,KAAKiB,GACpBP,EAAkB,I,EAIlBnC,EACFE,EAAa4C,eAAenC,EAAmBsB,GAE/C/B,EAAa4C,eAAenC,EAAmB,GAEnD,CApCAV,EAAQuB,cAAcC,KAAKC,GAsCvBxB,GACF2B,IAGF1B,EAAOI,UAAUwC,0BAA0BC,IACrCA,EAAMC,qBAAqB,6CAC7B3C,EAASH,EAAOI,UAAUC,iBAAiB,2BAC3CC,EAAkBH,EAAOI,IACvB,kBACA,2BAEFC,EAAkBuC,UAClBvC,EAAoBR,EAAOC,OAAOQ,+BAA+B,CAC/DH,gBAAiBA,IAEnBoB,I,IAIJ1B,EAAOC,OAAO+C,6BACXC,IACClD,EAAekD,EACXA,GACFvB,G,GAGJ,KACA5B,EAAQuB,eAGVrB,EAAOI,UAAU8C,yBACdL,IACK9C,GAAgB8C,EAAMjB,WAAa7B,EAAa6B,UAClDF,G,GAGJ,KACA5B,EAAQuB,cAEZ,EAEA,wBAA8B,C","sources":["webpack://php-codeblock-highlighter/external commonjs \"vscode\"","webpack://php-codeblock-highlighter/webpack/bootstrap","webpack://php-codeblock-highlighter/./src/extension.ts"],"sourcesContent":["module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as vscode from \"vscode\";\r\n\r\nlet isEnabled = true; // Variable to keep track of the state (enabled/disabled)\r\n\r\nexport function activate(context: vscode.ExtensionContext) {\r\n  let activeEditor = vscode.window.activeTextEditor;\r\n\r\n  let config = vscode.workspace.getConfiguration(\"phpCodeblockHighlighter\");\r\n  let backgroundColor = config.get(\r\n    \"backgroundColor\",\r\n    \"rgba(50, 120, 200, 0.5)\"\r\n  );\r\n\r\n  let phpDecorationType = vscode.window.createTextEditorDecorationType({\r\n    backgroundColor: backgroundColor,\r\n  });\r\n\r\n  // Create status bar item\r\n  const toggleStatusBarItem = vscode.window.createStatusBarItem(\r\n    vscode.StatusBarAlignment.Right,\r\n    100\r\n  );\r\n  toggleStatusBarItem.command = \"togglePHPBackground\";\r\n  updateStatusBarItem(toggleStatusBarItem); // Initialize\r\n\r\n  // Add to context.subscriptions to ensure they are disposed of\r\n  context.subscriptions.push(toggleStatusBarItem);\r\n\r\n  function updateStatusBarItem(item: vscode.StatusBarItem) {\r\n    if (isEnabled) {\r\n      item.text = `ðŸŽ¨On`;\r\n      item.color = undefined; // Reset to default color\r\n    } else {\r\n      item.text = `ðŸŽ¨Off`;\r\n      item.color = \"rgba(255, 255, 255, 0.5)\"; // 50% transparency\r\n    }\r\n    item.tooltip = \"Toggle PHP Background Color\"; // Tooltip for more information\r\n    item.show();\r\n  }\r\n\r\n  // Register the command to toggle the background\r\n  const toggleCommand = vscode.commands.registerCommand(\r\n    \"togglePHPBackground\",\r\n    () => {\r\n      isEnabled = !isEnabled; // Toggle the state\r\n      updateStatusBarItem(toggleStatusBarItem); // Update status bar item\r\n      updateDecorations(); // Update decorations based on the new state\r\n    }\r\n  );\r\n\r\n  // Add to context.subscriptions to ensure they are disposed of\r\n  context.subscriptions.push(toggleCommand);\r\n\r\n  function updateDecorations() {\r\n    if (!activeEditor) {\r\n      return;\r\n    }\r\n\r\n    const regEx = /<\\?php|\\?>/g;\r\n    const text = activeEditor.document.getText();\r\n    const phpDecorations: vscode.DecorationOptions[] = [];\r\n    let match;\r\n    let openTagPosition: vscode.Position | null = null;\r\n\r\n    while ((match = regEx.exec(text))) {\r\n      const startPos = activeEditor.document.positionAt(match.index);\r\n      const endPos = activeEditor.document.positionAt(\r\n        match.index + match[0].length\r\n      );\r\n\r\n      if (match[0] === \"<?php\") {\r\n        openTagPosition = startPos;\r\n      } else if (match[0] === \"?>\" && openTagPosition) {\r\n        const decoration = {\r\n          range: new vscode.Range(openTagPosition, endPos),\r\n          hoverMessage: \"PHP block\",\r\n        };\r\n        phpDecorations.push(decoration);\r\n        openTagPosition = null;\r\n      }\r\n    }\r\n\r\n    if (isEnabled) {\r\n      activeEditor.setDecorations(phpDecorationType, phpDecorations);\r\n    } else {\r\n      activeEditor.setDecorations(phpDecorationType, []); // Clear the decorations if disabled\r\n    }\r\n  }\r\n\r\n  if (activeEditor) {\r\n    updateDecorations();\r\n  }\r\n\r\n  vscode.workspace.onDidChangeConfiguration((event) => {\r\n    if (event.affectsConfiguration(\"phpCodeblockHighlighter.backgroundColor\")) {\r\n      config = vscode.workspace.getConfiguration(\"phpCodeblockHighlighter\");\r\n      backgroundColor = config.get(\r\n        \"backgroundColor\",\r\n        \"rgba(255, 0, 255, 0.25)\"\r\n      );\r\n      phpDecorationType.dispose();\r\n      phpDecorationType = vscode.window.createTextEditorDecorationType({\r\n        backgroundColor: backgroundColor,\r\n      });\r\n      updateDecorations();\r\n    }\r\n  });\r\n\r\n  vscode.window.onDidChangeActiveTextEditor(\r\n    (editor) => {\r\n      activeEditor = editor;\r\n      if (editor) {\r\n        updateDecorations();\r\n      }\r\n    },\r\n    null,\r\n    context.subscriptions\r\n  );\r\n\r\n  vscode.workspace.onDidChangeTextDocument(\r\n    (event) => {\r\n      if (activeEditor && event.document === activeEditor.document) {\r\n        updateDecorations();\r\n      }\r\n    },\r\n    null,\r\n    context.subscriptions\r\n  );\r\n}\r\n\r\nexport function deactivate() {}\r\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","isEnabled","context","activeEditor","vscode","window","activeTextEditor","config","workspace","getConfiguration","backgroundColor","get","phpDecorationType","createTextEditorDecorationType","toggleStatusBarItem","createStatusBarItem","StatusBarAlignment","Right","updateStatusBarItem","item","text","color","tooltip","show","command","subscriptions","push","toggleCommand","commands","registerCommand","updateDecorations","regEx","document","getText","phpDecorations","match","openTagPosition","exec","startPos","positionAt","index","endPos","length","decoration","range","Range","hoverMessage","setDecorations","onDidChangeConfiguration","event","affectsConfiguration","dispose","onDidChangeActiveTextEditor","editor","onDidChangeTextDocument"],"sourceRoot":""}